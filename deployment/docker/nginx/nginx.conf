server {
    listen 80 default_server;
    server_name api.streamsflix.online; 
    access_log /var/log/nginx/access.log main;

    client_header_timeout 60;
    client_body_timeout 60;
    keepalive_timeout 60;
    gzip off;
    gzip_comp_level 4;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
    
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }

    # Include the Elastic Beanstalk generated locations (if applicable, otherwise remove)
    include conf.d/elasticbeanstalk/*.conf; 
}

# HTTPS server
server {
    listen 443 ssl;
    server_name api.streamsflix.online;

    ssl_certificate /etc/letsencrypt/live/api.streamsflix.online/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.streamsflix.online/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Security headers (optional but recommended)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    # Main proxy or app location
    location / {
        proxy_pass http://api:5000; # Proxy to the 'api' service in docker-compose
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 'healthy';
    }
}
